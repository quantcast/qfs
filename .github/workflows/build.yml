name: Build

on: [push, pull_request]

jobs:
  rat:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: rat
        run: make rat clean

  linux-build-docker:
    strategy:
      matrix:
        distro: [ubuntu, centos, debian, i386/ubuntu]
        exclude:
          - distro: ubuntu
          - distro: centos
          - distro: debian
          - distro: i386/ubuntu
        include:
          - distro: ubuntu
            ver: 20.04
            codecov: no
            btype: release
            buser: qfsbuild
          - distro: ubuntu
            ver: 18.04
            codecov: no
            btype: release
            buser: qfsbuild
          - distro: ubuntu
            ver: 18.04
            codecov: yes
            btype: release
            buser: qfsbuild
          - distro: ubuntu
            ver: 18.04
            codecov: no
            btype: debug
            buser: qfsbuild
          - distro: ubuntu
            ver: 18.04
            codecov: no
            btype: release
            buser: root
          - distro: ubuntu
            ver: 16.04
            codecov: no
            btype: release
            buser: qfsbuild
          - distro: ubuntu
            ver: 14.04
            codecov: no
            btype: release
            buser: qfsbuild
          - distro: debian
            ver: 9
            codecov: no
            btype: release
            buser: qfsbuild
          - distro: debian
            ver: 10
            codecov: no
            btype: release
            buser: qfsbuild
          - distro: centos
            ver: 5
            codecov: no
            btype: release
            buser: qfsbuild
          - distro: centos
            ver: 6
            codecov: no
            btype: release
            buser: qfsbuild
          - distro: centos
            ver: 7
            codecov: no
            btype: release
            buser: qfsbuild
          - distro: centos
            ver: 8
            codecov: no
            btype: release
            buser: qfsbuild
          - distro: i386/ubuntu
            ver: 18.04
            codecov: no
            btype: release
            buser: qfsbuild
    runs-on: ubuntu-latest
    env:
      BUILD_OS_NAME: linux
      BUILD_RUN_DOCKER: 'yes'
      DISTRO: ${{ matrix.distro }}
      VER: ${{ matrix.ver }}
      CODECOV: ${{ matrix.codecov }}
      BTYPE: ${{ matrix.btype }}
      BUSER: ${{ matrix.buser }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Linux docker build
        run: |
          travis/script.sh
          sudo chown "$USER" .git/config

      - name: Upload tarball
        if: >
          ${{ ('refs/heads/master' == github.ref
          || 'refs/heads/topic/github_actions_xxx' == github.ref
          || startsWith(github.ref, 'refs/tags/'))
          && 'yes' != matrix.codecov
          && 'release' == matrix.btype
          && 'qfsbuild' == matrix.buser }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: aws s3 cp build/qfs-*.tgz s3://quantcast-qfs

  osx-build:
    runs-on: macos-latest
    env:
      BUILD_OS_NAME: osx
    steps:
      - name: Brew install
        run: |
          brew install boost || true
          brew install osxfuse || true

      - name: Checkout code
        uses: actions/checkout@v2

      - name: MacOS build
        run: travis/script.sh

      - name: Upload tarball
        if: >
          ${{ 'refs/heads/master' == github.ref
          || 'refs/heads/topic/github_actions_xxx' == github.ref
          || startsWith(github.ref, 'refs/tags/') }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: aws s3 cp build/qfs-*.tgz s3://quantcast-qfs

  cygwin-build:
    runs-on: windows-latest
    env:
        CYG_ROOT: C:\cygwin_q
        CYG_MIRROR: http://cygwin.mirror.constant.com
        CYG_CACHE: C:\cygwin_q\var\cache\setup
        CYG_BASH: C:\cygwin_q\bin\bash
        DEPENDENCIES: >
          gcc-g++,autoconf,automake,make,cmake,libboost-devel,libssl-devel,
          bzip2,python,git,libstdc++6-devel,libkrb5-devel,zlib-devel
    steps:
      - name: Install Hadoop Tools and Cygwin
        shell: pwsh
        run: |
          $up = (Get-Item -Path ".." -Verbose).FullName
          $tools = "$up\tools"
          if (!(Test-Path $tools)) {
              New-Item -ItemType Directory -Force -Path $tools | Out-Null
          }
          $hadoopVer = "2.6.0"
          $hadoopPath = "$tools\hadoop"
          if (!(Test-Path $hadoopPath)) {
              New-Item -ItemType Directory -Force -Path $hadoopPath | Out-Null
          }
          Push-Location $hadoopPath

          Start-FileDownload `
            "https://github.com/steveloughran/winutils/archive/master.zip" `
            "winutils-master.zip"

          # extract
          Invoke-Expression "7z.exe x winutils-master.zip"

          # add hadoop bin to environment variables
          $env:HADOOP_HOME = "$hadoopPath/winutils-master/hadoop-$hadoopVer"
          Pop-Location
          Start-FileDownload "http://cygwin.com/setup-x86.exe" `
            -FileName "setup-x86.exe"
          .\setup-x86.exe --quiet-mode --no-shortcuts --only-site `
            --root "$env:CYG_ROOT" --site "$env:CYG_MIRROR" `
            --local-package-dir "$env:CYG_CACHE" `
            --packages $env:DEPENDENCIES

      - name: Cygwin build
        shell: cmd
        run: |
          "%CYG_BASH%" -lc "cygcheck -dc cygwin && cmake --version && mvn --version"
          "%CYG_BASH%" -lc "df -h . ; make -j2 --no-print-directory tarball;"
